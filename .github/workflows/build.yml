name: Build
on: push
env:
  NODE_ENV: production
  GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build:
    name: Build
    runs-on: [self-hosted]
    continue-on-error: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node v12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install dependencies
        run: |
          npm install -g @angular/cli
          npm i

      - name: Run build
        run: ng build --prod --output-hashing none
        env:
          NODE_ENV: production

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACTIONS_CACHE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ACTIONS_CACHE_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.ACTIONS_CACHE_AWS_REGION}}
        env:
          AWS_ACCESS_KEY: ${{ secrets.ACTIONS_CACHE_AWS_ACCESS_KEY_ID }}
          AWS_ACCESS_SECRET: ${{ secrets.ACTIONS_CACHE_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{secrets.ACTIONS_CACHE_AWS_REGION}}

      - name: Push build to cache
        run: aws s3 cp dist/rzp-checkout-builder s3://rzp-actions-cache/checkout-builder --recursive
        env:
          AWS_ACCESS_KEY: ${{ secrets.ACTIONS_CACHE_AWS_ACCESS_KEY_ID }}
          AWS_ACCESS_SECRET: ${{ secrets.ACTIONS_CACHE_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{secrets.ACTIONS_CACHE_AWS_REGION}}

  workflow_status:
    runs-on: [self-hosted]
    name: Update Status Check
    needs: [build]
    continue-on-error: false
    if: always()
    steps:
      - name: Failed
        id: failed
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: |
          echo 'Failing the workflow for github status check.'
          curl -X POST -H "Content-Type: application/json" -H "Authorization: token ${{ github.token }}" \
          -d '{ "state" : "failure" , "context" : "github/combined-status-check" , "description" : "github/combined-status-check", "target_url" : "https://github.com/${{ github.repository }}" }' \
          https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}
          exit 1
      - name: Success
        if: steps.failed.conclusion == 'skipped'
        run: |
          echo 'Status check has passed!'
          curl -X POST -H "Content-Type: application/json" -H "Authorization: token ${{ github.token }}" \
          -d '{ "state" : "success" , "context" : "github/combined-status-check" , "description" : "github/combined-status-check", "target_url" : "https://github.com/${{ github.repository }}" }' \
          https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}
          exit 0
